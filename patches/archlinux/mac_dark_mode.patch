--- a/chrome/browser/themes/theme_properties.cc
+++ b/chrome/browser/themes/theme_properties.cc
@@ -178,7 +178,44 @@
   // but this is very subject to change. Additionally, dark mode incognito may
   // end up having a different look. For now, just call into GetIncognitoColor
   // for convenience, but maintain a separate interface.
-  return GetIncognitoColor(id);
+  switch (id) {
+    case ThemeProperties::COLOR_FRAME:
+      return gfx::macFrame;
+    case ThemeProperties::COLOR_BACKGROUND_TAB:
+      return gfx::macFrameInactive;
+    case ThemeProperties::COLOR_FRAME_INACTIVE:
+      return gfx::macFrameInactive;
+    case ThemeProperties::COLOR_BACKGROUND_TAB_INACTIVE:
+      return gfx::macTabInactiveInBackground;
+    case ThemeProperties::COLOR_DOWNLOAD_SHELF:
+    case ThemeProperties::COLOR_STATUS_BUBBLE:
+    case ThemeProperties::COLOR_INFOBAR:
+    case ThemeProperties::COLOR_TOOLBAR:
+    case ThemeProperties::COLOR_NTP_BACKGROUND:
+      return gfx::macTabInactiveInBackground;
+    case ThemeProperties::COLOR_HOVER_CARD_NO_PREVIEW_FOREGROUND:
+      return gfx::kGoogleGrey900;
+    case ThemeProperties::COLOR_HOVER_CARD_NO_PREVIEW_BACKGROUND:
+      return gfx::kGoogleGrey900;
+    case ThemeProperties::COLOR_BOOKMARK_TEXT:
+    case ThemeProperties::COLOR_TAB_TEXT:
+      return gfx::kGoogleGrey100;
+    case ThemeProperties::COLOR_NTP_TEXT:
+      return gfx::kGoogleGrey200;
+    case ThemeProperties::COLOR_BACKGROUND_TAB_TEXT:
+    case ThemeProperties::COLOR_BACKGROUND_TAB_TEXT_INACTIVE:
+    case ThemeProperties::COLOR_TAB_ALERT_AUDIO:
+    case ThemeProperties::COLOR_TAB_ALERT_CAPTURING:
+    case ThemeProperties::COLOR_TAB_PIP_PLAYING:
+    case ThemeProperties::COLOR_TAB_ALERT_RECORDING:
+      return gfx::kGoogleGrey400;
+    case ThemeProperties::COLOR_TOOLBAR_CONTENT_AREA_SEPARATOR:
+      return SkColorSetRGB(0x28, 0x28, 0x28);
+    case ThemeProperties::COLOR_NTP_LINK:
+      return gfx::kGoogleBlue300;
+    default:
+      return base::nullopt;
+  }
 }
 
 }  // namespace
--- a/chrome/browser/ui/omnibox/omnibox_theme.cc
+++ b/chrome/browser/ui/omnibox/omnibox_theme.cc
@@ -21,9 +21,7 @@
   const bool selected = state == OmniboxPartState::SELECTED;
   switch (part) {
     case OmniboxPart::LOCATION_BAR_BACKGROUND:
-      return state == OmniboxPartState::HOVERED
-                 ? TP::COLOR_OMNIBOX_BACKGROUND_HOVERED
-                 : TP::COLOR_OMNIBOX_BACKGROUND;
+      return TP::COLOR_OMNIBOX_BACKGROUND_HOVERED;
     case OmniboxPart::LOCATION_BAR_SELECTED_KEYWORD:
       return TP::COLOR_OMNIBOX_SELECTED_KEYWORD;
     case OmniboxPart::RESULTS_BACKGROUND:
--- a/chrome/browser/ui/omnibox/omnibox_theme.h
+++ b/chrome/browser/ui/omnibox/omnibox_theme.h
@@ -33,6 +33,7 @@
   NORMAL,
   HOVERED,
   SELECTED,
+  INACTIVE,
 };
 
 // Returns the color for the given |part| and |tint|. An optional |state| can be
--- a/ui/gfx/color_palette.h
+++ b/ui/gfx/color_palette.h
@@ -149,6 +149,21 @@
 // sometimes listed as 0.38a.
 constexpr SkAlpha kDisabledControlAlpha = 0x61;
 
+
+// Mac dark mode colours
+constexpr SkColor macDefaultAccent = SkColorSetRGB(0x03, 0x57, 0xD9);
+constexpr SkColor macMenuBackground = SkColorSetRGB(0x37, 0x37, 0x37);
+constexpr SkColor macLocationBar = SkColorSetRGB(0x75, 0x75, 0x75);
+constexpr SkColor macLocationBarInactive = SkColorSetRGB(0x41, 0x41, 0x41);
+constexpr SkColor macFrame = SkColorSetRGB(0x26, 0x26, 0x26);
+constexpr SkColor macFrameInactive = SkColorSetRGB(0x1E, 0x1E, 0x1E);
+constexpr SkColor macBackground = SkColorSetRGB(0x32, 0x32, 0x32);
+constexpr SkColor macBackgroundInactive = SkColorSetRGB(0x2D, 0x2D, 0x2D);
+constexpr SkColor macTab = SkColorSetRGB(0x38, 0x38, 0x38);
+constexpr SkColor macTabInactive = SkColorSetRGB(0x39, 0x39, 0x39);
+constexpr SkColor macTabInBackground = SkColorSetRGB(0x1E, 0x1E, 0x1E);
+constexpr SkColor macTabInactiveInBackground = SkColorSetRGB(0x2D, 0x2D, 0x2D);
+
 }  // namespace gfx
 
 #endif  // UI_GFX_COLOR_PALETTE_H_
--- a/ui/native_theme/common_theme.cc
+++ b/ui/native_theme/common_theme.cc
@@ -51,8 +51,7 @@
       case NativeTheme::kColorId_WindowBackground:
       case NativeTheme::kColorId_DialogBackground:
       case NativeTheme::kColorId_BubbleBackground:
-        return color_utils::AlphaBlend(SK_ColorWHITE, gfx::kGoogleGrey900,
-                                       0.04f);
+        return gfx::macMenuBackground;
       case NativeTheme::kColorId_DialogForeground:
         return gfx::kGoogleGrey500;
       case NativeTheme::kColorId_BubbleFooterBackground: